// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CATEGORY {
  GROCERY
  CLOTHE
  DIGITAL
}

model Product {
  id       String             @id @default(uuid())
  name     String             @db.VarChar(255)
  category CATEGORY
  amount   Int
  price    Float
  orders   ProductsOnOrders[]

  @@map("product")
}

model Customer {
  id         String   @id @default(uuid())
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")
  middleName String?  @map("middle_name")
  email      String   @unique
  birthDate  DateTime @map("birth_date")
  orders     Order[]

  @@map("customer")
}

enum POSITION {
  MANAGER
  ASSISTANT
  CASHIER
  CLERCK
  STOCKER
}

model Employee {
  id         String   @id @default(uuid())
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")
  middleName String?  @map("middle_name")
  position   POSITION
  orders     Order[]

  @@map("employee")
}

model Order {
  id           String             @id @default(uuid())
  orderAddress String             @map("order_address")
  deliveryCost Float              @map("delivery_cost")
  orderDate    DateTime           @default(now()) @map("order_date")
  Customer     Customer?          @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId   String?            @map("customer_id")
  Employee     Employee?          @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId   String?            @map("employee_id")
  products     ProductsOnOrders[]

  @@map("order")
}

model ProductsOnOrders {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String

  @@map("products_on_order")
}
